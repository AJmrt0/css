// SegmentedControl

.SegmentedControl {
  display: inline-flex;
  background-color: var(--color-scale-gray-1); // TODO: Create Primitive
  border-radius: var(--primer-borderRadius-medium, $border-radius);
  box-shadow: var(--primer-borderInset-thin, inset 0 0 0 $border-width) var(--color-border-default);
}

// Button -----------------------------------------

.SegmentedControl-button {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--primer-control-medium-gap, $spacer-2);
  padding: 0 var(--primer-control-medium-paddingInline-normal, 12px);
  font-size: var(--primer-text-body-size-medium, $body-font-size);
  height: var(--primer-control-medium-size, 32px);
  color: var(--color-fg-default);
  background-color: transparent;
  border-radius: var(--primer-borderRadius-medium, $border-radius);
  border: var(--primer-borderWidth-thin, $border-width) $border-style transparent;
  transition: border-color, background-color 180ms cubic-bezier(0.3, 0.1, 0.5, 1);

  &:hover {
    background-color: var(--color-neutral-muted); // TODO: Replace?
    transition-duration: 120ms;
  }

  &:active {
    background-color: hsl(210deg 13% 72% / 40%); // TODO: Replace
    border-color: var(--color-scale-gray-3); // TODO: Remove?
    transition-duration: 60ms;
  }

  // Pressed

  // TODO: Change to aria-current or aria-selected?
  &[aria-pressed='true'] {
    font-weight: var(--base-text-weight-semibold, 600);
    background-color: var(--color-canvas-subtle);  // TODO: Create Primitive?
    border-color: var(--color-scale-gray-4); // TODO: Create Primitive
    box-shadow: var(--color-shadow-medium);
  }

  // Divider

  & + .SegmentedControl-button::before {
    content: '';
    position: absolute;
    left: -1px;
    top: 1px; // Account for border width
    margin-top: var(--primer-control-medium-paddingBlock, 6px);
    height: var(--primer-text-body-size-large, 16px);
    border-left: var(--primer-borderWidth-thin, $border-width) $border-style var(--color-border-default);
    transition: border-color 180ms cubic-bezier(0.3, 0.1, 0.5, 1);
  }

  // Remove dividers

  &[aria-pressed='true'] + .SegmentedControl-button::before {
    border-color: transparent;
  }

  &:hover,
  &:active,
  &:focus-visible {
    &::before,
    & + .SegmentedControl-button::before {
      border-color: transparent;
      transition-duration: 60ms;
    }
  }
}

// Icon -----------------------------------------

.SegmentedControl-leadingIcon {
  color: var(--color-fg-muted);
}

// Variants -----------------------------------------

// fullWidth
.SegmentedControl--fullWidth {
  display: flex;
  .SegmentedControl-button {
    flex: 1;
  }
}


// Icon only
.SegmentedControl-button--iconOnly {
  padding-left: 0;
  padding-right: 0;
  width: var(--primer-control-medium-size, 32px);
}

// Icon only when narrow
@media (max-width: $width-md) { // TODO: use token
  .SegmentedControl--iconOnly-whenNarrow {
    .SegmentedControl-button {
      padding-left: 0;
      padding-right: 0;
      width: var(--primer-control-medium-size, 32px);
    }

    .SegmentedControl-label {
      display: none;
    }
  }
}
